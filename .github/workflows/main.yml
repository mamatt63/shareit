name: shareit

on:
  push:
    branches: ['main', 'stage/*']

jobs:
  build:
    environment:
      name: build
    runs-on: ubuntu-latest
    outputs:
      shareit_image_tag: ${{ steps.build_vars.outputs.SHAREIT_IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4.1.7

      - uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.23.1'

      - uses: ko-build/setup-ko@v0.6
        with:
          version: v0.16.0
        env:
          KO_DOCKER_REPO: ${{ vars.DIGITALOCEAN_REGISTRY_FQDN }}/${{ vars.CLOCKWORK_REGISTRY_NAME }}/shareit

      - name: generate build variables
        run: |
          GIT_SHORT_SHA1=$(git rev-parse --short=8 ${{ github.sha }})
          echo "GIT_SHORT_SHA1=$GIT_SHORT_SHA1" >> $GITHUB_OUTPUT
          echo "SHAREIT_IMAGE_TAG=${GIT_SHORT_SHA1}-amd64" >> $GITHUB_OUTPUT
          echo "SHAREIT_IMAGE_TAG=${GIT_SHORT_SHA1}-amd64" >> $GITHUB_ENV
        id: build_vars

      - name: registry login
        env:
          CLOCKWORK_REGISTRY_RW_TOKEN: ${{ secrets.CLOCKWORK_REGISTRY_RW_TOKEN }}
        run: |
          echo "${CLOCKWORK_REGISTRY_RW_TOKEN}" |
          ko login ${{ vars.DIGITALOCEAN_REGISTRY_FQDN }} --username ${{ vars.CLOCKWORK_REGISTRY_USERNAME }} --password-stdin

      - name: build and push
        run: ko build --base-import-paths --image-refs metadata.txt --platform=linux/amd64 --tags ${{ env.SHAREIT_IMAGE_TAG }} --push ./app

  deploy:
    needs: build
    environment:
      name: dev01
      url: ${{ vars.SHAREIT_URL }}
    runs-on: ubuntu-latest
    steps:
      - name: retrieve environment name
        uses: qoomon/actions--context@v2
        id: context

      - name: dump context
        uses: crazy-max/ghaction-dump-context@v2

      - uses: actions/checkout@v4.1.7

      - name: setup kubeconfig file
        uses: actions-hub/kubectl@v1.31.1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: dump current namespace content
        uses: actions-hub/kubectl@v1.31.1
        with:
          args: get all

      - name: generate manifests
        run: |
          envsubst < <(cat deployment/shareit-app/*.yml) > shareit-deploy.yml
        env:
          SHAREIT_DEPLOYMENT_FQDN: ${{ vars.SHAREIT_FQDN }}
          SHAREIT_CONTAINER_IMAGE_URL: ${{ vars.DIGITALOCEAN_REGISTRY_FQDN }}/${{ vars.CLOCKWORK_REGISTRY_NAME }}/shareit/app
          SHAREIT_CONTAINER_IMAGE_VERSION: ${{ needs.build.outputs.shareit_image_tag }}
          SHAREIT_DEPLOYMENT_VERSION: ${{ github.sha }}
          SHAREIT_BLOB_URL: s3://do-interview?endpoint=https://ams3.digitaloceanspaces.com&disableSSL=true&s3ForcePathStyle=true&region=ams3&prefix=${{ steps.context.outputs.environment }}/
          SHAREIT_BLOB_ACCESS_KEY_ID: ${{ secrets.SHAREIT_BLOB_ACCESS_KEY_ID }}
          SHAREIT_BLOB_SECRET_ACCESS_KEY: ${{ secrets.SHAREIT_BLOB_SECRET_ACCESS_KEY }}

      - name: dump application manifest
        run: |
          cat shareit-deploy.yml

      - name: kubectl delete previous deployment
        uses: actions-hub/kubectl@v1.31.1
        with:
          args: delete all --all --wait=true

      - name: kubectl apply
        uses: actions-hub/kubectl@v1.31.1
        with:
          args: apply -f shareit-deploy.yml

      - name: wait for 30s to get HTTP 200
        uses: nev7n/wait_for_response@v1
        with:
          url: https://${{ vars.SHAREIT_FQDN }}
          responseCode: 200
          timeout: 30000
          interval: 500
